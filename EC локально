# Docker file used for CI/CD pipeline to verify builds with their dependencies
FROM node:20.17 AS builder
WORKDIR /usr/eventcatalog/
COPY package*.json .
RUN npm ci
COPY . .
RUN npm run build:bin
RUN npm pack


FROM node:20.17 AS runner
WORKDIR /usr/example/
COPY examples/default/ .
COPY --from=builder /usr/eventcatalog/*.tgz /usr/eventcatalog/
RUN npm init -y && \
    npm install /usr/eventcatalog/*.tgz
CMD ["npx", "eventcatalog", "build"]

===============================================================================
FROM alpine:3.19-updated as base
ENV CREATECATALOG_VERSION="2.2.7" \
    GENERATORASYNCAPI_VERSION="3.0.5" \
    GENERATOROPENAPI_VERSION="4.0.7" \
    NODE_OPTIONS=--max_old_space_size=2048

RUN apk update && apk add --no-cache bash npm curl nodejs \  
    && rm -rf /var/cache/apk/* \
    && adduser -u 777 -D -H -s /sbin/nologin eventcatalog \
    && update-ca-certificates --fresh

WORKDIR /home/eventcatalog
COPY --chown=eventcatalog /resources/.npmrc /etc/npmrc
COPY --chown=eventcatalog /resources/.npmrc /home/eventcatalog/.npmrc
COPY /resources/.yarnrc /usr/local/share/.yarnrc


USER root

RUN npm install --save \
    @eventcatalog/create-eventcatalog@${CREATECATALOG_VERSION} \
    @eventcatalog/generator-openapi@${GENERATOROPENAPI_VERSION} \
    @eventcatalog/generator-asyncapi@${GENERATORASYNCAPI_VERSION} \
    yarn
ENV PATH="/home/eventcatalog/node_modules/.bin:/usr/local/bin:$PATH"
RUN npm install --global yarn

USER eventcatalog

EXPOSE 3000

CMD ["create-catalog", "start"]

======================================================================================
# Этап 1: Сборка проекта
FROM node:20 AS build

# Установите рабочую директорию
WORKDIR /app

# Установите переменные окружения для версий пакетов
ENV CREATECATALOG_VERSION="2.2.7" \
    GENERATORASYNCAPI_VERSION="3.0.5" \
    GENERATOROPENAPI_VERSION="4.0.7"

# Скопируйте package.json и package-lock.json
COPY package*.json ./

# Установите зависимости
RUN npm install

# Установите пакеты EventCatalog
RUN npm install -g \
    @eventcatalog/create-catalog@${CREATECATALOG_VERSION} \
    @eventcatalog/generator-openapi@${GENERATOROPENAPI_VERSION} \
    @eventcatalog/generator-asyncapi@${GENERATORASYNCAPI_VERSION}

# Скопируйте остальные файлы проекта
COPY . .

# Сгенерируйте документацию (если нужно)
RUN npm run generate:openapi
RUN npm run generate:asyncapi

# Соберите проект
RUN npm run build

# Этап 2: Финальный образ
FROM nginx:1.24.0

# Скопируйте собранный проект из этапа build
COPY --from=build /app/out /usr/share/nginx/html

# Копируем конфигурацию Nginx (если нужно)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Откройте порт 80
EXPOSE 80

# Запустите nginx
CMD ["nginx", "-g", "daemon off;"]
