Prometheus Java Client
Metrics Path
The metrics path is /metrics.
Name Filter
If you want to scrape only specific metrics, use the name[] parameter like this:
/metrics?name[]=my_metric
You can also use multiple name[] parameters to query multiple metrics:
/metrics?name[]=my_metric_a&name=[]=my_metric_b
The name[] parameter can be used by the Prometheus server for scraping. Add the following snippet to your scrape job configuration in prometheus.yaml:
params:
    name[]:
        - my_metric_a
        - my_metric_b
Debug Parameter
The Prometheus Java metrics library supports multiple exposition formats. The Prometheus server sends the Accept header to indicate which format it accepts.
By default, the Prometheus server accepts OpenMetrics text format, unless the Prometheus server is started with feature flag --enable-feature=native-histograms,
in which case the default is Prometheus protobuf. The Prometheus Java metrics library supports a debug query parameter for viewing the different formats in
a Web browser:
/metrics?debug=openmetrics: View OpenMetrics text format.
/metrics?debug=text: View Prometheus text format (this is the default when accessing the /metrics endpoint with a Web browser).
/metrics?debug=prometheus-protobuf: View a text representation of the Prometheus protobuf format.
Note that the debug parameter is only for viewing different formats in a Web browser, it should not be used by the Prometheus server for scraping.
The Prometheus server uses the Accept header for indicating which format it accepts.
































lowercaseOutputName: true
rules:
  # Broker metrics
  - pattern: "kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec><>Count"
    name: "kafka_broker_topic_bytes_in_total"
    type: COUNTER
  - pattern: "kafka.server<type=BrokerTopicMetrics, name=BytesOutPerSec><>Count"
    name: "kafka_broker_topic_bytes_out_total"
    type: COUNTER
  - pattern: "kafka.server<type=BrokerTopicMetrics, name=MessagesInPerSec><>Count"
    name: "kafka_broker_topic_messages_in_total"
    type: COUNTER

  # Replica metrics
  - pattern: "kafka.server<type=ReplicaManager, name=PartitionCount><>Value"
    name: "kafka_replica_manager_partition_count"
    type: GAUGE
  - pattern: "kafka.server<type=ReplicaManager, name=LeaderCount><>Value"
    name: "kafka_replica_manager_leader_count"
    type: GAUGE

  # Request metrics
  - pattern: "kafka.network<type=RequestMetrics, name=RequestsPerSec, request=Produce><>Count"
    name: "kafka_network_requests_produce_total"
    type: COUNTER
  - pattern: "kafka.network<type=RequestMetrics, name=RequestsPerSec, request=Fetch><>Count"
    name: "kafka_network_requests_fetch_total"
    type: COUNTER

  # Log metrics
  - pattern: "kafka.log<type=LogFlushStats, name=LogFlushRateAndTimeMs><>Count"
    name: "kafka_log_flush_total"
    type: COUNTER
