keytool -importkeystore \
  -srckeystore keystore.p12 \
  -srcstoretype PKCS12 \
  -destkeystore kafka.keystore.jks \
  -deststoretype JKS \
  -srcstorepass your_keystore_password \
  -deststorepass your_keystore_password
=================
keytool -genkeypair \ 
-keysize 2048 -validity 356 -storepass qwe123 \ 
-alias kafka-test-keystore -storetype JKS \
-dname "CN=test-kafka.local, OU=DevLocal, L=Test, ST=Test, C=TSET" -ext "san=ip:172.20.0.19" \
-keypass qwe123 -keyalg RSA \
-sigalg SHA256withRSA \
-keystore secrets/kafka.jks
====================================
keytool -genkeypair -keysize 2048 -validity 356 -storepass qwe123 -alias kafka-test-keystore -storetype JKS -dname "CN=test-kafka.local, OU=DevLocal, L=Test, ST=Test, C=TSET" -keypass qwe123 -keyalg RSA -sigalg SHA256withRSA -keystore secrets/kafka.jks

Создание JKS:
keytool -genkeypair \
  -alias mykey \
  -keyalg RSA \
  -keystore keystore.jks \
  -storepass mykeystorepassword \
  -keypass mykeypassword \
  -dname "CN=localhost, OU=Dev, O=MyOrg, L=City, ST=State, C=Country" \
  -validity 365



Use "keytool -?, -h, or --help" for this help message
-keysize: команда не найдена
Команда «-alias» не найдена. Возможно, вы имели в виду:
  command '0alias' from deb 0install-core (2.16-2)
Try: apt install <deb name>
============================================
version: '3.8'

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '2181:2181'
    networks:
      - kafka-net

  zookeeper2:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 12181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '12181:12181'
    networks:
      - kafka-net

  zookeeper3:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '22181:22181'
    networks:
      - kafka-net

  broker-111:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      - zookeeper2
      - zookeeper3
    ports:
      - 29092:29092  # PLAINTEXT port
      - 29093:29093  # SSL port
    container_name: broker-111
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181,zookeeper2:12181,zookeeper3:22181"
      
      # Настройки слушателей
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-111:29092,SSL://broker-111:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
      
      # Настройки для межброкерского общения через SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      
      # Репликация и другие параметры
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_SCHEMA_REGISTRY_URL: schemaregistry:8085
      KAFKA_JMX_HOSTNAME: broker-111
      KAFKA_JMX_PORT: 9991
      
      # Настройки SSL
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.broker.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: your_keystore_password
      KAFKA_SSL_KEY_PASSWORD: your_key_password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.broker.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: your_truststore_password
      
    volumes:
      - kafka-data:/kafka/data
      - ./secrets:/etc/kafka/secrets  # Монтируем локальную папку с сертификатами в контейнер
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  kafka-data:
