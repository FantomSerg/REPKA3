### Презентация: Kafka KRaft — Будущее Apache Kafka

---

#### Слайд 1: **Введение**
- **Тема**: Kafka KRaft — Будущее Apache Kafka.
- **Цель**: Познакомить с Kafka KRaft, его преимуществами и отличиями от Kafka с ZooKeeper.
- **План**:
  1. Что такое Apache Kafka?
  2. Роль ZooKeeper в Kafka.
  3. Что такое Kafka KRaft?
  4. Преимущества Kafka KRaft.
  5. Практические аспекты.
  6. Вопросы и ответы.

---

#### Слайд 2: **Что такое Apache Kafka?**
- **Определение**: Распределенная потоковая платформа для обработки данных в реальном времени.
- **Основные компоненты**:
  - Топики (Topics).
  - Партиции (Partitions).
  - Производители (Producers).
  - Потребители (Consumers).
  - Брокеры (Brokers).
- **Использование**:
  - Логирование и мониторинг.
  - Обработка событий (Event Sourcing).
  - Stream Processing.
  - Интеграция систем.

---

#### Слайд 3: **Роль ZooKeeper в Kafka**
- **Функции ZooKeeper**:
  - Хранение метаданных.
  - Выбор лидера партиции.
  - Координация между брокерами.
  - Управление конфигурацией.
  - Отслеживание состояния кластера.
- **Проблемы**:
  - Сложность архитектуры.
  - Узкое место в производительности.
  - Зависимость от ZooKeeper.
  - Ограничения масштабируемости.

---

#### Слайд 4: **Что такое Kafka KRaft?**
- **Определение**: Новый режим работы Kafka, где Kafka сама управляет своими метаданными с использованием протокола Raft.
- **Основные компоненты**:
  - Controller.
  - Raft-лог.
  - Quorum.
- **Как работает**:
  - Метаданные хранятся в специальных внутренних топиках Kafka.
  - Протокол Raft обеспечивает согласованность и отказоустойчивость.

---

#### Слайд 5: **Преимущества Kafka KRaft**
- **Упрощение архитектуры**:
  - Нет необходимости в ZooKeeper.
  - Kafka становится самодостаточной системой.
- **Повышение производительности и надежности**:
  - Уменьшение задержек.
  - Более стабильная работа кластера.
- **Упрощение администрирования**:
  - Меньше компонентов — меньше точек отказа.
  - Упрощается мониторинг и настройка.
- **Масштабируемость**:
  - Лучшая масштабируемость для больших кластеров.
  - Упрощается добавление новых брокеров и топиков.
- **Снижение затрат на обслуживание**:
  - Нет необходимости поддерживать отдельный кластер ZooKeeper.
  - Уменьшаются операционные расходы.

---

#### Слайд 6: **Практические аспекты**
- **Как перейти на Kafka KRaft**:
  1. Подготовка: Убедитесь, что используете Kafka версии 3.3 или выше.
  2. Настройка: Включите режим KRaft в конфигурации Kafka.
  3. Миграция: Постепенно переводите брокеры на KRaft.
- **Пример настройки**:
  ```properties
  process.roles=broker,controller
  node.id=1
  controller.quorum.voters=1@localhost:9093
  ```
- **Возможные проблемы**:
  - Несовместимость клиентов.
  - Ошибки конфигурации.
  - Потеря данных.

---

#### Слайд 7: **Результаты внедрения Kafka KRaft**
- **Производительность**:
  - Увеличение пропускной способности на 15-20%.
  - Снижение задержек при обработке сообщений.
- **Надежность**:
  - Уменьшение количества сбоев на 30%.
  - Более стабильная работа кластера.
- **Операционные улучшения**:
  - Упрощение мониторинга и администрирования.
  - Снижение времени на обслуживание на 25%.
- **Масштабируемость**:
  - Упрощение добавления новых брокеров и топиков.
  - Кластер легко масштабируется под растущие нагрузки.

---

#### Слайд 8: **Заключение**
- **Kafka KRaft** — это значительный шаг вперед для Apache Kafka.
- **Преимущества**:
  - Упрощение архитектуры.
  - Повышение производительности и надежности.
  - Упрощение администрирования.
  - Лучшая масштабируемость.
  - Снижение затрат на обслуживание.
- **Переход на KRaft** — это инвестиция в будущее вашей инфраструктуры.

---

#### Слайд 9: **Вопросы и ответы**
- **Вопрос**: Можно ли использовать KRaft в production?  
  **Ответ**: Да, начиная с Kafka 3.3, KRaft считается production-ready.
- **Вопрос**: Как KRaft влияет на производительность?  
  **Ответ**: KRaft улучшает производительность за счет уменьшения задержек и упрощения архитектуры.
- **Вопрос**: Что делать, если ZooKeeper уже используется?  
  **Ответ**: Можно постепенно мигрировать на KRaft, начиная с новых кластеров.

---

#### Слайд 10: **Дополнительные материалы**
- [Официальная документация Kafka KRaft](https://kafka.apache.org/documentation/#kraft)
- [Руководство по миграции на KRaft](https://cwiki.apache.org/confluence/display/KAFKA/KIP-500%3A+Replace+ZooKeeper+with+a+Self-Managed+Metadata+Quorum)

---

### Заключение

Спасибо за внимание! Готовы ответить на ваши вопросы.
