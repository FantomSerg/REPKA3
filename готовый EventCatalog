RUN apt update && apt -y install bash npm curl git expect libnss3-tools \
    && mkdir -p /app \
    && adduser -D -u 777 eventcatalog \
    && chown -R 777 /app \

RUN apt-get update && \
    apt-get install -y --no-install-recommends git expect && \
    npm install -g npm@latest && \
    rm -rf /var/lib/apt/lists/*

FROM node:latest AS build

# Устанавливаем необходимые утилиты
RUN apt-get update && apt-get install -y --no-install-recommends git expect && \
    npm install -g npm@latest && \
    rm -rf /var/lib/apt/lists/*

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем expect-скрипт внутрь контейнера
COPY create-eventcatalog.exp /app/create-eventcatalog.exp

# Делаем скрипт исполняемым и запускаем его
RUN chmod +x /app/create-eventcatalog.exp && /app/create-eventcatalog.exp

# Переходим в созданную директорию
WORKDIR /app/my-event-catalog

# Устанавливаем плагины
RUN npm install @eventcatalog/generator-asyncapi @eventcatalog/generator-openapi

RUN sed -i '/strict-peer-dependencies/d' /app/my-event-catalog/.npmrc || true

# Открываем порт
EXPOSE 3000

# Запускаем приложение
CMD ["npm", "run", "dev"]

# Этап 2: Рантайм
FROM httpd:2.4 AS runtime

# Копируем сгенерированные файлы из этапа сборки в директорию для статичных файлов Apache
COPY --from=build /app/my-event-catalog/dist /usr/local/apache2/htdocs/

# Открываем порт 80 для доступа
EXPOSE 80

# Запускаем HTTP сервер
CMD ["httpd-foreground"]

create-eventcatalog.exp 
#!/usr/bin/expect -f
set timeout -1
spawn npx @eventcatalog/create-eventcatalog@3.0.0
expect "Ok to proceed?"
send "y\r"
expect "What is your project named?"
send "my-event-catalog\r"
expect "What is your organization name?"
send "EventCatalog Ltd\r"
expect eof

# Этап 2: Запуск через Nginx
FROM nginx:alpine AS runtime

# Удаляем стандартный конфиг Nginx
RUN rm /etc/nginx/conf.d/default.conf

# Копируем наш Nginx конфиг
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Копируем статические файлы (результаты сборки)
COPY --from=build /app/my-event-catalog/dist /usr/share/nginx/html

# Открываем порт 80
EXPOSE 80

# Запускаем Nginx
CMD ["nginx", "-g", "daemon off;"]
