===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
Running in KRaft mode...
KAFKA_ADVERTISED_LISTENERS is required.
Command [/usr/local/bin/dub ensure KAFKA_ADVERTISED_LISTENERS] FAILED !


Running in KRaft mode...
===> Running preflight checks ... 
===> Check if /var/lib/kafka/data is writable ...
===> Running in KRaft mode, skipping Zookeeper health check...
===> Using provided cluster id fJenKkxqRCGwrLPYJNyQkA ...
Exception in thread "main" java.lang.IllegalArgumentException: requirement failed: The listeners config must only contain KRaft controller
listeners from controller.listener.names when process.roles=controller at scala.Predef$.require(Predef.scala:337) 
at kafka.server.KafkaConfig.validateValues(KafkaConfig.scala:2411) at kafka.server.KafkaConfig.<init>(KafkaConfig.scala:2290)
at kafka.server.KafkaConfig.<init>(KafkaConfig.scala:1638) at kafka.tools.StorageTool$.$anonfun$execute$1(StorageTool.scala:71) 
at scala.Option.flatMap(Option.scala:283) at kafka.tools.StorageTool$.execute(StorageTool.scala:71) 
at kafka.tools.StorageTool$.main(StorageTool.scala:52) at kafka.tools.StorageTool.main(StorageTool.scala)

Running in Zookeeper mode...
KAFKA_ZOOKEEPER_CONNECT is required.
Command [/usr/local/bin/dub ensure KAFKA_ZOOKEEPER_CONNECT] FAILED !


===> User
uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
===> Configuring ...
Running in KRaft mode...
CLUSTER_ID is required.
Command [/usr/local/bin/dub ensure CLUSTER_ID] FAILED !

============================================

docker run --rm -it --entrypoint /bin/kafka-storage confluentinc/cp-kafka:latest random-uuid
=======================
docker compose exec kafka-controller-1 kafka-storage random-uuid
WARN[0000] /home/fanta/Desktop/kraft/docker-compose.yaml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion 
#!/bin/bash

# Генерация уникального идентификатора кластера
CLUSTER_ID=$(kafka-storage random-uuid)

# Установка переменной окружения
echo "KAFKA_KRAFT_CLUSTER_ID=$CLUSTER_ID" >> /etc/kafka/secrets/.env


- ./generate_cluster_id.sh:/usr/local/bin/generate_cluster_id.sh
    command: ["/usr/local/bin/generate_cluster_id.sh"]  # Запускаем скрипт при старте контейнера
